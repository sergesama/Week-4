{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sergesama\\\\Desktop\\\\React\\\\Week 3\\\\src\\\\components\\\\DishdetailComponent.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Form } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = () => {\n      this.setState({\n        isModalOpen: !this.state.isModalOpen\n      });\n    };\n\n    this.handleComment = event => {\n      this.toggleModal();\n      alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value + \" Remember: \" + this.remember.checked);\n      event.preventDefault();\n    };\n\n    this.state = {\n      isModalOpen: false\n    };\n  }\n\n  validate(raiting, name, comment) {\n    const errors = {\n      firstname: '',\n      lastname: '',\n      telnum: '',\n      email: ''\n    };\n    if (this.state.touched.firstname && firstname.length < 3) errors.firstname = 'First Name should be >= 3 characters';else if (this.state.touched.firstname && firstname.length > 10) errors.firstname = 'First Name should be <=10 characters';\n    if (this.state.touched.lastname && lastname.length < 3) errors.lastname = 'Last Name should be >= 3 characters';else if (this.state.touched.lastname && lastname.length > 10) errors.lastname = 'Last Name should be <=10 characters';\n    const reg = /^\\d+$/;\n    if (this.state.touched.telnum && !reg.test(telnum)) errors.telnum = 'Tel. Number should contain only numbers';\n    if (this.state.touched.email && email.split('').filter(x => x === '@').length !== 1) errors.email = 'Email should contain a @';\n    return errors;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        outline: true,\n        onClick: this.toggleModal,\n        children: \" Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: this.state.isModalOpen,\n        toggle: this.toggleModal,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: this.toggleModal,\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(LocalForm, {\n            onSubmit: values => this.handleSubmit(values),\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"firstname\",\n                md: 2,\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 10,\n                children: [/*#__PURE__*/_jsxDEV(Control.text, {\n                  model: \".firstname\",\n                  id: \"firstname\",\n                  name: \"firstname\",\n                  placeholder: \"First Name\",\n                  className: \"form-control\",\n                  validators: {\n                    required,\n                    minLength: minLength(3),\n                    maxLength: maxLength(15)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Errors, {\n                  className: \"text-danger\",\n                  model: \".firstname\",\n                  show: \"touched\",\n                  messages: {\n                    required: 'Required',\n                    minLength: 'Must be greater than 2 characters',\n                    maxLength: 'Must be 15 characters or less'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 3\n    }, this);\n  }\n\n}\n\nfunction RenderComments({\n  All_comments\n}) {\n  if (All_comments != null) {\n    const comments = All_comments.map(com => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-unstyled\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: com.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [com.author + \" \", new Intl.DateTimeFormat('en-US', {\n            year: 'numeric',\n            month: 'short',\n            day: '2-digit'\n          }).format(new Date(Date.parse(com.date)))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CardText, {\n          children: comments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 6\n    }, this);\n  }\n}\n\n_c = RenderComments;\n\nfunction RenderDish({\n  dish\n}) {\n  if (dish != null) return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardImg, {\n      width: \"100%\",\n      src: dish.image,\n      alt: dish.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CardTitle, {\n      children: dish.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)]\n  }, dish.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 6\n  }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 7\n  }, this);\n}\n\n_c2 = RenderDish;\n\nconst DishDetail = props => {\n  if (props != null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n          children: [/*#__PURE__*/_jsxDEV(BreadcrumbItem, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/menu\",\n              children: \"Menu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(BreadcrumbItem, {\n            active: true,\n            children: props.dish.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: props.dish.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-5 m-1\",\n          children: /*#__PURE__*/_jsxDEV(RenderDish, {\n            dish: props.dish\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-5 m-1\",\n          children: [/*#__PURE__*/_jsxDEV(RenderComments, {\n            All_comments: props.comments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CommentForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_c3 = DishDetail;\nexport default DishDetail;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"RenderComments\");\n$RefreshReg$(_c2, \"RenderDish\");\n$RefreshReg$(_c3, \"DishDetail\");","map":{"version":3,"sources":["C:/Users/Sergesama/Desktop/React/Week 3/src/components/DishdetailComponent.js"],"names":["React","Component","Card","CardImg","CardText","CardBody","CardTitle","Breadcrumb","BreadcrumbItem","Button","Modal","ModalHeader","ModalBody","Form","Link","CommentForm","constructor","props","toggleModal","setState","isModalOpen","state","handleComment","event","alert","username","value","password","remember","checked","preventDefault","validate","raiting","name","comment","errors","firstname","lastname","telnum","email","touched","length","reg","test","split","filter","x","render","values","handleSubmit","required","minLength","maxLength","RenderComments","All_comments","comments","map","com","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","RenderDish","dish","image","id","DishDetail"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem,Button, Modal,ModalHeader,ModalBody,Form } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass CommentForm  extends Component {\r\n\t    constructor(props) {\r\n        super(props);\r\n\t\t\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n      }\r\n\r\n      \r\n\ttoggleModal = () => {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\thandleComment = (event) => {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\t\r\n\tvalidate(raiting,name,comment){\r\n\t\tconst errors ={\r\n\t\t\tfirstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: '',\r\n\t\t};\r\n\t\t\r\n\r\n\t\tif(this.state.touched.firstname && firstname.length < 3)\r\n\t\t\terrors.firstname = 'First Name should be >= 3 characters';\r\n\t\telse if(this.state.touched.firstname && firstname.length > 10)\t\r\n\t\t\terrors.firstname = 'First Name should be <=10 characters';\r\n\t\t\t\r\n\t\tif(this.state.touched.lastname && lastname.length < 3)\r\n\t\t\terrors.lastname = 'Last Name should be >= 3 characters';\r\n\t\telse if(this.state.touched.lastname && lastname.length > 10)\t\r\n\t\t\terrors.lastname = 'Last Name should be <=10 characters';\r\n\t\t\t\r\n\t\tconst reg = /^\\d+$/;\r\n\t\tif (this.state.touched.telnum && !reg.test(telnum))\r\n\t\t\terrors.telnum ='Tel. Number should contain only numbers'\r\n\t\t\t\r\n\t\tif (this.state.touched.email && email.split('').filter(x => x==='@').length !==1)\r\n\t\t\terrors.email ='Email should contain a @'\r\n\t\t\t\r\n\t\treturn errors;\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn(\r\n\t\t<div>\r\n\t\t\t<Button outline onClick={this.toggleModal}> Comment</Button>\r\n\t\t\t<Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n\t\t\t   <ModalHeader toggle={this.toggleModal}>Comment</ModalHeader>\r\n                    <ModalBody>\r\n                     <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                           <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nfunction RenderComments({All_comments})\r\n\t{\r\n\t\tif (All_comments != null)\r\n\t\t{\r\n\t\t\tconst comments = All_comments.map((com) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t  <div  className=\"list-unstyled\">\r\n\t\t\t\t\t<div>{com.comment}</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{com.author + \" \"} \r\n\t\t\t\t\t\t{new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(com.date)))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t\treturn(\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t  <h4>Comments</h4>\r\n\t\t\t\t\t\t  <CardText>{comments}</CardText>\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t</Card>\r\n\t\t\t)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn(\r\n\t\t\t\t\t<div></div>\r\n\t\t\t\t);\r\n\t\t}\r\n\t}\r\nfunction RenderDish({dish})\r\n\t{\r\n\t\t\tif (dish != null)\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<Card key={dish.id}>\r\n\t\t\t\t\t   <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n\t\t\t\t\t\t  <CardTitle>{dish.name}</CardTitle>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t\t);\r\n\t\t\t\telse\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<div></div>\r\n\t\t\t\t\t);\r\n\t}\r\nconst DishDetail =(props) =>{\r\n\r\n\t\t if (props != null)\r\n\t\t{\r\n\t\t\t            return (\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={props.dish} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderComments All_comments={props.comments} />\r\n\t\t\t\t\t\t<CommentForm/>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            );\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn (<div></div>)\r\n\t\t}\r\n\t\r\n\t\r\n}\r\nexport default DishDetail;"]},"metadata":{},"sourceType":"module"}